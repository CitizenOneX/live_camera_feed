local a=require('data.min')local b=require('battery.min')NON_FINAL_CHUNK_MSG=0x07;FINAL_CHUNK_MSG=0x08;STREAM_MSG=0x0a;CAMERA_SETTINGS_MSG=0x0d;function parse_stream(a)local c={}if string.byte(a,1)==1 then c.streaming=true else c.streaming=false end;return c end;local d={10,25,50,100}local e={"SPOT","CENTER_WEIGHTED","AVERAGE"}function parse_camera_settings(a)local c={}c.quality=d[string.byte(a,1)+1]c.auto_exp_gain_times=string.byte(a,2)c.metering_mode=e[string.byte(a,3)+1]c.exposure=(string.byte(a,4)-128)/64.0;c.shutter_kp=string.byte(a,5)/10.0;c.shutter_limit=string.byte(a,6)<<8|string.byte(a,7)c.gain_kp=string.byte(a,8)/10.0;c.gain_limit=string.byte(a,9)return c end;a.parsers[CAMERA_SETTINGS_MSG]=parse_camera_settings;a.parsers[STREAM_MSG]=parse_stream;function show_streaming()frame.display.text("Streaming",1,1)frame.display.show()frame.sleep(0.04)end;function clear_display()frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)end;function app_loop()local f=frame.bluetooth.max_length()-4;local g=0;local h={quality=50,auto_exp_gain_times=0,metering_mode="SPOT",exposure=0,shutter_kp=0.1,shutter_limit=6000,gain_kp=1.0,gain_limit=248.0}local i=false;local j=true;local k=true;local l={}while true do local m=a.process_raw_items()if m>0 then if a.app_data[CAMERA_SETTINGS_MSG]~=nil then h=a.app_data[CAMERA_SETTINGS_MSG]a.app_data[CAMERA_SETTINGS_MSG]=nil end;if a.app_data[STREAM_MSG]~=nil then i=a.app_data[STREAM_MSG].streaming;a.app_data[STREAM_MSG]=nil;if i then show_streaming()else clear_display()end end end;if i then rc,err=pcall(function()if j and k then j=false;k=false;frame.camera.capture{quality_factor=h.quality}elseif not k and l[1]~=nil then local n=1;for o,p in pairs(l)do pcall(frame.bluetooth.send,string.char(NON_FINAL_CHUNK_MSG)..p)if n%8==0 then frame.camera.auto{metering=h.metering_mode,exposure=h.exposure,shutter_kp=h.shutter_kp,shutter_limit=h.shutter_limit,gain_kp=h.gain_kp,gain_limit=h.gain_limit}frame.sleep(0.0075)else frame.sleep(0.0125)end;n=n+1 end;pcall(frame.bluetooth.send,string.char(FINAL_CHUNK_MSG))k=true;for o,p in pairs(l)do l[o]=nil end elseif k and not j then while true do local a=frame.camera.read(f)if a==nil then break end;table.insert(l,a)end;j=true else k=true end end)if rc==false then print(err)clear_display()break end else frame.sleep(0.1)end;g=b.send_batt_if_elapsed(g,60)end end;app_loop()