_M={}local a={}_M.app_data_accum=a;local b={}_M.app_data_block=b;local c={}_M.app_data=c;local d={}_M.parsers=d;function _M.update_app_data_accum(e)local f=string.byte(e,1)local g=a[f]if g==nil or next(g)==nil then g={chunk_table={},num_chunks=0,size=0,recv_bytes=0}a[f]=g end;if g.num_chunks==0 then g.size=string.byte(e,2)<<8|string.byte(e,3)g.chunk_table[1]=string.sub(e,4)g.num_chunks=1;g.recv_bytes=string.len(e)-3;if g.recv_bytes==g.size then b[f]=g.chunk_table[1]g.size=0;g.recv_bytes=0;g.num_chunks=0;g.chunk_table[1]=nil;a[f]=g end else g.chunk_table[g.num_chunks+1]=string.sub(e,2)g.num_chunks=g.num_chunks+1;g.recv_bytes=g.recv_bytes+string.len(e)-1;if g.recv_bytes==g.size then b[f]=table.concat(g.chunk_table)for h,i in pairs(g.chunk_table)do g.chunk_table[h]=nil end;g.size=0;g.recv_bytes=0;g.num_chunks=0;a[f]=g end end end;frame.bluetooth.receive_callback(_M.update_app_data_accum)function _M.process_raw_items()local j=0;for k,l in pairs(b)do if d[k]==nil then print('Error: No parser for flag: '..tostring(k))else c[k]=d[k](l)b[k]=nil;j=j+1 end end;return j end;return _M